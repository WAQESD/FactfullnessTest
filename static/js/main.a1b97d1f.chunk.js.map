{"version":3,"sources":["Component/Container.js","Component/Question.js","Component/Errata.js","Component/Commentary.js","Component/FAB.js","Component/Answer.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","children","Question","num","content","onClick","style","marginTop","choice","Errata","answer","select","result","location","document","querySelectorAll","offsetTop","window","scrollTo","top","behavior","undefined","Commentary","backgroundColor","color","border","display","flexDirection","FAB","useState","addEventListener","position","scrollY","outerHeight","setTop","left","querySelector","offsetLeft","setLeft","outerWidth","Answer","questions","errata","commentary","num2alp","push","i","makeErrata","makeCommentary","justifyContent","marginRight","reload","time","Date","submit","URL","App","setNum","Array","setSelect","length","checkScore","arr","score","rid","now","fetch","method","headers","body","JSON","stringify","slice","catch","e","console","log","width","n","tmp","height","src","fontFamily","fontSize","then","res","json","data","sort","a","b","qid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1b97d1f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Container = (props) => {\r\n  return <div className=\"Container\">{props.children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Question = (props) => {\r\n  return (\r\n    <div className=\"question\">\r\n      <div className=\"question-content\">\r\n        <div className=\"number\">{`${props.num}.`}</div>\r\n        <div>{props.content}</div>\r\n      </div>\r\n      <div\r\n        className=\"question-choice\"\r\n        onClick={() => props.onClick(1)}\r\n        style={{ marginTop: \"auto\" }}\r\n      >{`A. ${props.choice[0]}`}</div>\r\n      <div\r\n        className=\"question-choice\"\r\n        onClick={() => props.onClick(2)}\r\n      >{`B. ${props.choice[1]}`}</div>\r\n      <div\r\n        className=\"question-choice\"\r\n        onClick={() => props.onClick(3)}\r\n      >{`C. ${props.choice[2]}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\n\r\nconst Errata = ({ num, answer, select, result }) => {\r\n  const onClick = () => {\r\n    let location =\r\n      document.querySelectorAll(\".commentary\")[num - 1].offsetTop - 200;\r\n    window.scrollTo({ top: location, behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"errata\">\r\n      <div className=\"errata-num\">{num}</div>\r\n      <div\r\n        className={\r\n          num ? `errata-${answer == select ? \"correct\" : \"wrong\"}` : \"\"\r\n        }\r\n        onClick={num ? onClick : undefined}\r\n      >\r\n        <div className=\"errata-answer\">{answer}</div>\r\n        <div className=\"errata-select\">{select}</div>\r\n        <div className=\"errata-result\">{result}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Errata;\r\n","import React from \"react\";\r\n\r\nconst Commentary = (props) => {\r\n  const answer = props.answer - 1;\r\n  const select = props.select - 1;\r\n  const style = [{}, {}, {}];\r\n\r\n  const applyStyle = () => {\r\n    if (answer == select) {\r\n      style[answer] = {\r\n        backgroundColor: \"#1FAB2F\",\r\n        color: \"white\",\r\n        border: \"1px solid #1FAB2F\",\r\n      };\r\n    } else {\r\n      style[answer] = {\r\n        backgroundColor: \"#1FAB2F\",\r\n        color: \"white\",\r\n        border: \"1px solid #1FAB2F\",\r\n      };\r\n      style[select] = {\r\n        backgroundColor: \"#c73510\",\r\n        color: \"white\",\r\n        border: \"1px solid #c73510\",\r\n      };\r\n    }\r\n  };\r\n\r\n  applyStyle();\r\n  return (\r\n    <div className=\"commentary\">\r\n      <div className=\"commentary-content\">\r\n        <div className=\"number\">{`${props.num}.`}</div>\r\n        <div>{props.content}</div>\r\n      </div>\r\n      {answer == select ? (\r\n        <div\r\n          style={{ marginTop: \"16px\", display: \"flex\", flexDirection: \"row\" }}\r\n        >\r\n          <div className=\"correct-box\"></div>\r\n          <div className=\"correct\">정답</div>\r\n          <div className=\"correct-box\"></div>\r\n          <div className=\"wrong\">내가 고른 답</div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{ marginTop: \"16px\", display: \"flex\", flexDirection: \"row\" }}\r\n        >\r\n          <div className=\"answer-box\"></div>\r\n          <div className=\"answer\">정답</div>\r\n          <div className=\"select-box\"></div>\r\n          <div className=\"select\">내가 고른 답</div>\r\n        </div>\r\n      )}\r\n      <div\r\n        className=\"commentary-choice\"\r\n        style={style[0]}\r\n      >{`A. ${props.choice[0]}`}</div>\r\n      <div\r\n        className=\"commentary-choice\"\r\n        style={style[1]}\r\n      >{`B. ${props.choice[1]}`}</div>\r\n      <div\r\n        className=\"commentary-choice\"\r\n        style={style[2]}\r\n      >{`C. ${props.choice[2]}`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Commentary;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst FAB = () => {\r\n  const [top, setTop] = useState(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      var position = window.scrollY + window.outerHeight * 0.75;\r\n      setTop(position);\r\n    });\r\n    return window.scrollY + window.outerHeight * 0.75;\r\n  });\r\n  const [left, setLeft] = useState(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      var left = document.querySelector(\".Container\").offsetLeft + 760;\r\n      setLeft(left);\r\n    });\r\n    return document.querySelector(\".Container\").offsetLeft + 760;\r\n  });\r\n  const mobile = window.outerWidth < 769;\r\n\r\n  return !mobile ? (\r\n    <div\r\n      className=\"upfab\"\r\n      style={{ top: top, left: left }}\r\n      onClick={() => {\r\n        window.scrollTo({ top: 0 });\r\n      }}\r\n    >\r\n      {\"^\"}\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default FAB;\r\n","import React from \"react\";\r\nimport Errata from \"./Errata\";\r\nimport Commentary from \"./Commentary\";\r\nimport FAB from \"./FAB\";\r\n\r\nconst Answer = ({ answer, select, questions }) => {\r\n  let errata = [];\r\n  let commentary = [];\r\n  const num2alp = (num) => {\r\n    if (num == 1) {\r\n      return \"A\";\r\n    } else if (num == 2) {\r\n      return \"B\";\r\n    } else {\r\n      return \"C\";\r\n    }\r\n  };\r\n\r\n  const makeErrata = () => {\r\n    errata.push(\r\n      <Errata num=\"\" answer=\"정답\" select=\"답안\" result=\"결과\" key={0}></Errata>\r\n    );\r\n    for (let i = 1; i < 14; i++) {\r\n      errata.push(\r\n        <Errata\r\n          key={i}\r\n          num={i}\r\n          answer={num2alp(answer[i - 1])}\r\n          select={num2alp(select[i])}\r\n          result={answer[i - 1] == select[i] ? \"O\" : \"X\"}\r\n        ></Errata>\r\n      );\r\n    }\r\n  };\r\n\r\n  const makeCommentary = () => {\r\n    for (let i = 1; i < 14; i++) {\r\n      commentary.push(\r\n        <Commentary\r\n          key={i}\r\n          num={i}\r\n          choice={questions[i].choice}\r\n          answer={answer[i - 1]}\r\n          select={select[i]}\r\n          content={questions[i].content}\r\n        ></Commentary>\r\n      );\r\n    }\r\n  };\r\n\r\n  makeErrata();\r\n  makeCommentary();\r\n\r\n  return (\r\n    <div className=\"answer-box\">\r\n      <div className=\"errata-box\">{errata}</div>\r\n      <div className=\"mobile-slide\">{`← →`}</div>\r\n      <div className=\"commentary-box\">{commentary}</div>\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <button\r\n          className=\"button\"\r\n          style={{ marginRight: \"40px\" }}\r\n          onClick={() => {\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          다시 풀기\r\n        </button>\r\n        <button className=\"button\">공유하기</button>\r\n      </div>\r\n      <FAB></FAB>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Answer;\r\n","import \"./App.css\";\nimport Container from \"./Component/Container\";\nimport Question from \"./Component/Question\";\nimport Answer from \"./Component/Answer\";\nimport { useState } from \"react\";\n\nlet questions = [];\nlet time = new Date();\nlet submit = false;\nconst URL =\n  \"http://ec2-13-125-219-111.ap-northeast-2.compute.amazonaws.com:8080\";\n\nconst answer = [3, 2, 3, 3, 3, 3, 3, 1, 3, 1, 3, 3, 1];\n\nfunction App() {\n  const [num, setNum] = useState(0);\n  const [select, setSelect] = useState(new Array(14));\n\n  let content = \"\";\n  let choice = [\"\", \"\", \"\"];\n\n  if (questions.length) {\n    content = questions[num].content;\n    choice = questions[num].choice;\n  }\n\n  const start = () => {\n    fetch(URL + \"/questions\")\n      .then((res) => {\n        res.json().then((data) => {\n          data.sort((a, b) => {\n            if (a.qid > b.qid) return 1;\n            else if (a.qid === b.qid) return 0;\n            else return -1;\n          });\n          questions = data;\n          setNum(1);\n          time = Date.now();\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const onClick = (n) => {\n    let tmp = select;\n    tmp[num] = n;\n    setSelect(tmp);\n  };\n\n  const checkScore = (arr) => {\n    let score = 0;\n    for (let i = 0; i < 13; i++) {\n      if (answer[i] === arr[i + 1]) {\n        score += 1;\n      }\n    }\n    return score;\n  };\n\n  if (num === 14 && !submit) {\n    let rid = Date.now();\n    time = Date.now() - time;\n    let score = checkScore(select);\n    submit = true;\n    fetch(`${URL}/result`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({ rid, select: select.slice(1), time, score }),\n    }).catch((e) => console.log(e));\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Container>\n          {num ? (\n            num < 14 ? (\n              <div>\n                <div\n                  style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                  }}\n                >\n                  <span className=\"title\">\n                    팩트풀니스 테스트 (Factfullness Test)\n                  </span>\n                  <div className=\"question-number\"> {`${num} / 13`} </div>\n                </div>\n                <Question\n                  num={num}\n                  content={content}\n                  choice={choice}\n                  select={select[num]}\n                  onClick={(n) => {\n                    onClick(n);\n                    setNum(num + 1);\n                  }}\n                ></Question>\n              </div>\n            ) : num < 15 ? (\n              <div>\n                <div className=\"title-box\">\n                  <div className=\"title\">당신의 점수는?</div>\n                  <div className=\"score-box\">\n                    <span\n                      className=\"score\"\n                      style={{\n                        color: `rgba(232,124,19,${\n                          0.5 + (0.5 * checkScore(select)) / 13\n                        })`,\n                      }}\n                    >\n                      {checkScore(select)}\n                    </span>\n                    <span className=\"score-max\"> {\" / 13\"}</span>\n                  </div>\n                </div>\n                <div className=\"result-description-box\">\n                  <div className=\"result-description\">\n                    당신은 {checkScore(select)}점이군요.\n                  </div>\n                  <div className=\"result-description\">\n                    너무 걱정하지는 마세요. 전 세계 평균은 2점 정도니까요.\n                  </div>\n                  <div className=\"result-description\">\n                    어떤 문제를 틀렸는지 확인해보세요.\n                  </div>\n                </div>\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                  <button\n                    className=\"result-button\"\n                    onClick={() => {\n                      setNum(15);\n                    }}\n                  >\n                    해설 보기\n                  </button>\n                </div>\n              </div>\n            ) : (\n              <Answer\n                select={select}\n                answer={answer}\n                questions={questions}\n              ></Answer>\n            )\n          ) : (\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <span className=\"main\">\n                팩트풀니스 테스트 (Factfullness Test)\n              </span>\n              <div className=\"main-content-box\">\n                <img\n                  src=\"http://image.yes24.com/goods/69724044/800x0\"\n                  width=\"200\"\n                  height=\"305\"\n                  className=\"book-image\"\n                />\n                <div>\n                  <div className=\"main-content\">\n                    전 세계적으로 확증편향이 기승을 부리는 탈진실의 시대에,\n                    막연한 두려움과 편견을 이기는 팩트의 중요성을 일깨우는\n                    세계적 역작!\n                  </div>\n                  <div className=\"main-content\">\n                    세계를 이해하기 위한 13가지 문제에서 인간의 평균 정답률은\n                    16%, 침팬지는 33%.\n                  </div>\n                  <div className=\"main-content\">\n                    똑똑하고 현명한 사람일수록 세상의 참모습을 정확히 알지\n                    못한다!\n                  </div>\n                  <div\n                    className=\"main-content\"\n                    style={{\n                      fontFamily: \"KOTRA_BOLD-Bold\",\n                      fontSize: \"14pt\",\n                      marginTop: \"24px\",\n                    }}\n                  >\n                    세계를 제대로 이해하고 있는지 확인해보세요\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <button className=\"button\" onClick={start}>\n                  시작하기\n                </button>\n              </div>\n            </div>\n          )}\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}